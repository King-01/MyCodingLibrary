<snippet>
	<content><![CDATA[
struct Edge{
	int v, u, w;
	bool operator<(Edge const& other) {
        return w < other.w;
    }
};
ll sz[N];
ll root[N];
void init()
{
    rep(i, 0, n+1){
        root[i] = i;
        sz[i] = 1;   
    }
}
ll find_set(ll v)
{
    while(v != root[v]){
        root[v] = root[root[v]];
        v = root[v];
    }
    return v;
}
void merge(ll a, ll b)
{
    ll par1 = find_set(a);
    ll par2 = find_set(b);
    if(a != b)
    {
        if(sz[a] < sz[b])swap(a, b);
        root[b] = a;
        sz[a] += sz[b];
    }
}
vector<Edge> edges;
int weight;
vector<Edge> result;
void kruskals()
{
	init();
	sort(all(edges));
	for(auto e: edges){
		if(find_set(e.u) != find_set(e.v))
		{
			weight += e.w;
			result.pb(e);
			merge(e.u, e.v);
		}
	}
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>kruskalMST</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
