<snippet>
	<content><![CDATA[
//works in O(n * logn * logn)
vector<int> suffix_array(string s1)
{
    s1 += "\$";
    int lem1 = sz(s1);
    vector<int>  c1(lem1);
    vector<pair<char, int> > p1(lem1);
    rep(i1 ,0, lem1)
    {
        p1[i1] = {s1[i1], i1};
    }
    sort(all(p1));
    rep(i1, 0, lem1)
    {
        if(!i1)c1[p1[i1].second] = 1;
        else
        {
            if(p1[i1].first == p1[i1 - 1].first)c1[p1[i1].second] = c1[p1[i1 - 1].second];
            else c1[p1[i1].second] = c1[p1[i1 - 1].second] + 1;
        }
    }
    int k1 = 0;
    while((1 << k1) < lem1)
    {
        vector<pair<pii, int>> a1(lem1);
        rep(i1 ,0, lem1)
        {
            a1[i1] = {{c1[i1], c1[((i1 + (1 << k1))%lem1)]}, i1};
        }
        sort(all(a1));
        int cnt1 = 1;
        rep(i1, 0, lem1)
        {
            if(!i1)c1[a1[i1].second] = cnt1;
            else
            {
                if(a1[i1].first == a1[i1 - 1].first)c1[a1[i1].second] = cnt1;
                else c1[a1[i1].second] = ++cnt1;
            }
        }
        if(cnt1 == lem1)break;
        k1++;
    }
    c1.erase(--c1.end());
    return c1;    
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>suffixarray</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
